<tool id="SAINT_preprocessing_v5" name="SAINT pre-processing">
  <description></description>
  <command interpreter="python">
    #if (str($type) == 'Scaffold'):
      SAINT_preprocessing.py $input $preybool $fasta_db $Inter_file $Prey_file 
      "
        #for $ba in $bait
         ${ba.bait1}
         ${ba.assign}
         ${ba.T_C}
        #end for
        "
      $Bait_file \$INSTALL_RUN_PATH/ $bait_bool $bait_file_in
    #elif (str($type) == 'MaxQuant'):
      SAINT_preprocessing_mq_pep.py $input $preybool $fasta_db $Inter_file $Prey_file 
        "
        #for $ba in $bait
          ${ba.bait1}
          ${ba.assign}
          ${ba.T_C}
        #end for
        "
      $Bait_file \$INSTALL_RUN_PATH/ $bait_bool $bait_file_in
    #end if
  </command>
  <requirements>
    <requirement type="set_environment">INSTALL_RUN_PATH</requirement>
    <requirement type="package" version="3.2.1">package_r_3_2_1</requirement>
  </requirements>
  <inputs>
    <param type="select" name="type" label="MaxQuant or Scaffold">
      <option value="MaxQuant">MaxQuant</option>
      <option value="Scaffold">Scaffold</option> 
    </param>
    <param format="dat" name="input" type="data" label="Scaffold or MaxQuant proteinGroup Output"/>
    <param type="boolean" name="preybool" checked="true" label="Create Prey File"/>
    <param type="data" name="fasta_db" format="fasta"  label="Provide Uniprot Fasta database" optional="true"/>
    <param name="bait_bool" type="boolean" checked="true" label="Are You Providing Your Own bait file?"/>
    <param type="data" format="dat" name="bait_file_in" label="Bait File" optional="true"/>
    <repeat name="bait" title="Bait Create">
      <param name="bait1" type="text" size="100" label="Bait"/>
      <param name="assign" type="text" size="100" label="Group Assignment"/>
      <param name="T_C" type="boolean" checked="true" label="Is this a Control?"/> 
    </repeat>

  </inputs>
  <outputs>
    <data format="txt" name="Inter_file" label="Inter File"/>    
    <data format="txt" name="Prey_file" label="Prey File" />
    <data format="txt" name="Bait_file" label="Bait File" />
  </outputs>
  <stdio>
    <regex match="Error|error"
	   source="stdout"
           level="fatal"
           description="Unknown error"/>
    <regex match="Error|error"
     source="stderr"
           level="fatal"
           description="Unknown error"/>
    <regex match="Error: bad bait"
           source="stdout"
           level="fatal"
           description="Error: bad bait"/>
  </stdio> 

  <tests>
    <test>
      <param name="input" value="fa_gc_content_input.fa"/>
      <output name="out_file1" file="fa_gc_content_output.txt"/>
    </test>
  </tests>
  <help>
# Pre-Processing

* * *

This tool will read in a Scaffold _Samples Report_ file (tab-delimited txt file) or a MaxQuant _peptides.txt_ file and process them to generate a _Bait File, Prey File,_ and _Inter File_ for SAINTexpress analysis.

#### 1) MaxQuant or Scaffold

APOSTL is able to recognize either a Scaffold _Samples Report_ file (tab-delimited txt file) or the _peptides.txt_ file output in the MaxQuant _txt_ output folder. No modifications should be made to these files. Please designate which one is being provided.

#### 2) Scaffold or MaxQuant File Input

Select the corresponding _Samples Report_ or _peptides.txt_ here.

#### 3) Create Prey File

Select whether or not you would like APOSTL to generate a prey file.

When making a prey file, APOSTL queries a user provided FASTA database (see below) in order to extract protein amino acid lengths and gene names. This may take several minutes depending on your computer and if your Galaxy distribution is cluster enabled. Some users may want to run SAINTexpress using the same data set while changing which baits are considered test or control. It is useful to toggle **Create Prey File** off in order to save time by circumventing this step as the same prey file can be used for both SAINTexpress runs.

#### 4) Provide Uniprot FASTA database

Please specify a FASTA file containing the protein sequence. You can download the latest release of Uniprot's reviewed sequences (Swiss-Prot) [here](http://www.uniprot.org/downloads). For computing efficiency, please limit your FASTA file to your species of interest. It is generally advised to use the same FASTA database that was used for your database searches during peptide and protein ID.

#### 5) Are You Providing Your Own Bait File?

Users have two options for providing a _Bait_ file. If you would like to create your own _Bait_ file, select <kbd>Yes</kbd> and designate the file below. If you would like to use the **Bait Create** tool to create a _Bait_ file within Galaxy, please select <kbd>No</kbd> and proceed to the **Bait Create** tool.

#### 6) Bait File

If you selected <kbd>Yes</kbd> above, please specify the _Bait_ file you would like to provide. If you selected <kbd>No</kbd> above, ignore this argument and proceed to the **Bait Create** tool.

> **Note:** Individual bait names must match to the sample names within your Scaffold or MaxQuant output exactly and must contain no whitespace characters (e.g. spaces) or dashes.

#### 7) Bait Create

Using the **Bait Create** tool, you can create your _bait.txt_ file.

> **Note:** Individual bait names must match to the sample names within your Scaffold or MaxQuant output exactly and must contain no whitespace characters (e.g. spaces) or dashes.

APOSTL uses this bait file to find the user's baits of interest within a _Samples Report_ or _peptides.txt_ file and when preparing the _inter.txt_ file.

* * *

Once your parameters have been finalized, please press the <kbd>Execute</kbd> button to start processing. This may take a few minutes. Once your process has been completed, you will see your _Bait File, Prey File,_ and _Inter File_ on the right hand side of your panel highlighted in green.
  </help>
</tool>
